// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// test用post
model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  date        DateTime @default(now())
}

// 練習用モデル作成
model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  role           String? //役割
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  // StudentProfileとのリレーション
  studentProfile StudentProfile?

  accounts Account[]
}

model StudentProfile {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  department     String? // 学科
  tel            String? // 電話番号
  graduationYear String? // 卒業年
  qualification  String? // 資格

  // Userとの逆向きのリレーション
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  // Calteとのリレーション
  record Record[]
}

model Record {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  content  String? // 面談の内容（ES添削、面談など）
  progress String? // テキスト
  date     DateTime @default(now())

  // studentProfileモデルのIDフィールドを参照
  studentProfileId String @db.ObjectId

  studentProfile StudentProfile @relation(fields: [studentProfileId], references: [id])

  @@index([progress], name: "idx_calte_progress")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// 職員NG日程用テーブル
model StaffNg {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId   // オブジェクトID
  email             String?                                                 // メールアドレス
  ymd               String?                                                 // 年月日
  time              String[]                                                // 時間帯 ＊配列で格納

  @@unique(fields: [email, ymd], name: "staffng_identifier")                // emailとymdの複合主キー 名前は"staffng_identifier"
}
